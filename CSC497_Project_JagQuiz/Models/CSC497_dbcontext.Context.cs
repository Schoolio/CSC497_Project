//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CSC497_Project_JagQuiz.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Project_CSC497Entities : DbContext
    {
        public Project_CSC497Entities()
            : base("name=Project_CSC497Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int uspAddToCourse(string pEmail, string pCourseDscpt)
        {
            var pEmailParameter = pEmail != null ?
                new ObjectParameter("pEmail", pEmail) :
                new ObjectParameter("pEmail", typeof(string));
    
            var pCourseDscptParameter = pCourseDscpt != null ?
                new ObjectParameter("pCourseDscpt", pCourseDscpt) :
                new ObjectParameter("pCourseDscpt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddToCourse", pEmailParameter, pCourseDscptParameter);
        }
    
        public virtual int uspChangePassword(string pEmail, string pNewPassword)
        {
            var pEmailParameter = pEmail != null ?
                new ObjectParameter("pEmail", pEmail) :
                new ObjectParameter("pEmail", typeof(string));
    
            var pNewPasswordParameter = pNewPassword != null ?
                new ObjectParameter("pNewPassword", pNewPassword) :
                new ObjectParameter("pNewPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspChangePassword", pEmailParameter, pNewPasswordParameter);
        }
    
        public virtual int uspDeleteAccount(string pEmail)
        {
            var pEmailParameter = pEmail != null ?
                new ObjectParameter("pEmail", pEmail) :
                new ObjectParameter("pEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteAccount", pEmailParameter);
        }
    
        public virtual ObjectResult<string> uspGetCourses(Nullable<int> pAccountFK)
        {
            var pAccountFKParameter = pAccountFK.HasValue ?
                new ObjectParameter("pAccountFK", pAccountFK) :
                new ObjectParameter("pAccountFK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetCourses", pAccountFKParameter);
        }
    
        public virtual ObjectResult<uspGetTermsByUser_Result> uspGetTermsByUser(Nullable<int> pAccountFK)
        {
            var pAccountFKParameter = pAccountFK.HasValue ?
                new ObjectParameter("pAccountFK", pAccountFK) :
                new ObjectParameter("pAccountFK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetTermsByUser_Result>("uspGetTermsByUser", pAccountFKParameter);
        }
    
        public virtual ObjectResult<uspLogIn_Result> uspLogIn(string pEmail, string pPassword)
        {
            var pEmailParameter = pEmail != null ?
                new ObjectParameter("pEmail", pEmail) :
                new ObjectParameter("pEmail", typeof(string));
    
            var pPasswordParameter = pPassword != null ?
                new ObjectParameter("pPassword", pPassword) :
                new ObjectParameter("pPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspLogIn_Result>("uspLogIn", pEmailParameter, pPasswordParameter);
        }
    
        public virtual ObjectResult<string> uspRegisterUser(string pJagNumber, string pEmail, string pPasswordHash, string pFirstName, string pLastName, Nullable<int> pAccountType)
        {
            var pJagNumberParameter = pJagNumber != null ?
                new ObjectParameter("pJagNumber", pJagNumber) :
                new ObjectParameter("pJagNumber", typeof(string));
    
            var pEmailParameter = pEmail != null ?
                new ObjectParameter("pEmail", pEmail) :
                new ObjectParameter("pEmail", typeof(string));
    
            var pPasswordHashParameter = pPasswordHash != null ?
                new ObjectParameter("pPasswordHash", pPasswordHash) :
                new ObjectParameter("pPasswordHash", typeof(string));
    
            var pFirstNameParameter = pFirstName != null ?
                new ObjectParameter("pFirstName", pFirstName) :
                new ObjectParameter("pFirstName", typeof(string));
    
            var pLastNameParameter = pLastName != null ?
                new ObjectParameter("pLastName", pLastName) :
                new ObjectParameter("pLastName", typeof(string));
    
            var pAccountTypeParameter = pAccountType.HasValue ?
                new ObjectParameter("pAccountType", pAccountType) :
                new ObjectParameter("pAccountType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspRegisterUser", pJagNumberParameter, pEmailParameter, pPasswordHashParameter, pFirstNameParameter, pLastNameParameter, pAccountTypeParameter);
        }
    
        public virtual int uspRemoveCourse(string pEmail, string pCourseDscpt)
        {
            var pEmailParameter = pEmail != null ?
                new ObjectParameter("pEmail", pEmail) :
                new ObjectParameter("pEmail", typeof(string));
    
            var pCourseDscptParameter = pCourseDscpt != null ?
                new ObjectParameter("pCourseDscpt", pCourseDscpt) :
                new ObjectParameter("pCourseDscpt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspRemoveCourse", pEmailParameter, pCourseDscptParameter);
        }
    
        public virtual ObjectResult<string> uspGetAllCourses()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetAllCourses");
        }
    
        public virtual ObjectResult<uspGetStudents_Result> uspGetStudents(Nullable<int> pCourseID)
        {
            var pCourseIDParameter = pCourseID.HasValue ?
                new ObjectParameter("pCourseID", pCourseID) :
                new ObjectParameter("pCourseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetStudents_Result>("uspGetStudents", pCourseIDParameter);
        }
    
        public virtual int uspAddCourse(Nullable<int> pAccountID, string pCourse)
        {
            var pAccountIDParameter = pAccountID.HasValue ?
                new ObjectParameter("pAccountID", pAccountID) :
                new ObjectParameter("pAccountID", typeof(int));
    
            var pCourseParameter = pCourse != null ?
                new ObjectParameter("pCourse", pCourse) :
                new ObjectParameter("pCourse", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddCourse", pAccountIDParameter, pCourseParameter);
        }
    
        public virtual int uspAddTerm(string pTerm, string pDef, string pModule, Nullable<int> pCourseDescript)
        {
            var pTermParameter = pTerm != null ?
                new ObjectParameter("pTerm", pTerm) :
                new ObjectParameter("pTerm", typeof(string));
    
            var pDefParameter = pDef != null ?
                new ObjectParameter("pDef", pDef) :
                new ObjectParameter("pDef", typeof(string));
    
            var pModuleParameter = pModule != null ?
                new ObjectParameter("pModule", pModule) :
                new ObjectParameter("pModule", typeof(string));
    
            var pCourseDescriptParameter = pCourseDescript.HasValue ?
                new ObjectParameter("pCourseDescript", pCourseDescript) :
                new ObjectParameter("pCourseDescript", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddTerm", pTermParameter, pDefParameter, pModuleParameter, pCourseDescriptParameter);
        }
    
        public virtual int uspDeleteCourse(string pCourseDescript)
        {
            var pCourseDescriptParameter = pCourseDescript != null ?
                new ObjectParameter("pCourseDescript", pCourseDescript) :
                new ObjectParameter("pCourseDescript", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteCourse", pCourseDescriptParameter);
        }
    
        public virtual int uspDeleteUser(string pJagNumber)
        {
            var pJagNumberParameter = pJagNumber != null ?
                new ObjectParameter("pJagNumber", pJagNumber) :
                new ObjectParameter("pJagNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteUser", pJagNumberParameter);
        }
    
        public virtual ObjectResult<string> uspGetCourseByUser(Nullable<int> pAccountFK)
        {
            var pAccountFKParameter = pAccountFK.HasValue ?
                new ObjectParameter("pAccountFK", pAccountFK) :
                new ObjectParameter("pAccountFK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetCourseByUser", pAccountFKParameter);
        }
    
        public virtual ObjectResult<string> uspGetCouseAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetCouseAll");
        }
    
        public virtual ObjectResult<uspGetTerm_Result> uspGetTerm(string pTerm)
        {
            var pTermParameter = pTerm != null ?
                new ObjectParameter("pTerm", pTerm) :
                new ObjectParameter("pTerm", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetTerm_Result>("uspGetTerm", pTermParameter);
        }
    
        public virtual int uspUpdateCourse(Nullable<int> pOldCourse, string pNewDescript)
        {
            var pOldCourseParameter = pOldCourse.HasValue ?
                new ObjectParameter("pOldCourse", pOldCourse) :
                new ObjectParameter("pOldCourse", typeof(int));
    
            var pNewDescriptParameter = pNewDescript != null ?
                new ObjectParameter("pNewDescript", pNewDescript) :
                new ObjectParameter("pNewDescript", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateCourse", pOldCourseParameter, pNewDescriptParameter);
        }
    
        public virtual int uspUpdateTerm(Nullable<int> pTermID, string pTerm, string pDef)
        {
            var pTermIDParameter = pTermID.HasValue ?
                new ObjectParameter("pTermID", pTermID) :
                new ObjectParameter("pTermID", typeof(int));
    
            var pTermParameter = pTerm != null ?
                new ObjectParameter("pTerm", pTerm) :
                new ObjectParameter("pTerm", typeof(string));
    
            var pDefParameter = pDef != null ?
                new ObjectParameter("pDef", pDef) :
                new ObjectParameter("pDef", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateTerm", pTermIDParameter, pTermParameter, pDefParameter);
        }
    
        public virtual ObjectResult<string> uspGetCoursesAsAdmin(Nullable<int> pAccountFK)
        {
            var pAccountFKParameter = pAccountFK.HasValue ?
                new ObjectParameter("pAccountFK", pAccountFK) :
                new ObjectParameter("pAccountFK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetCoursesAsAdmin", pAccountFKParameter);
        }
    }
}
